from scipy.spatial import ConvexHull

import pandas as pd
import numpy as np

import matplotlib.pyplot as plt
from matplotlib.patches import Arc

%matplotlib inline

defdata = pd.read_csv("def_table.csv")

player50471 = defdata.loc[(defdata['player'] == 50471)]

defpoints = player50471[['x', 'y']].values

#Create a convex hull object and assign it to the variable hull
hull = ConvexHull(player50471[['x','y']])

#Plot the X & Y location with dots
plt.plot(player50471.x,player50471.y, 'o')

#Plot the X & Y location with dots
plt.plot(player50471.x,player50471.y, 'o')

#Loop through each of the hull's simplices
for simplex in hull.simplices:
    #Draw a black line between each
    plt.plot(defpoints[simplex, 0], defpoints[simplex, 1], 'k-')
    
    
#Plot the X & Y location with dots
plt.plot(player50471.x,player50471.y, 'o')

#Loop through each of the hull's simplices
for simplex in hull.simplices:
    #Draw a black line between each
    plt.plot(defpoints[simplex, 0], defpoints[simplex, 1], 'k-')
    
#Fill the area within the lines that we have drawn
plt.fill(defpoints[hull.vertices,0], defpoints[hull.vertices,1], 'k', alpha=0.3)

TeamB = defdata.loc[(defdata.team == "Team B")]


players = TeamB["player"].unique()

#For each player in our players variable
for player in players:
    
    #Create a new dataframe for the player
    df = TeamB[(TeamB.player == player)]
    
    #Create an array of the x/y coordinate groups
    points = df[['x', 'y']].values

    #If there are enough points for a hull, create it. If there's an error, forget about it
    try:
        hull = ConvexHull(df[['x','y']])
        
    except:
        pass
    
    #If we created the hull, draw the lines and fill with 5% transparent red. If there's an error, forget about it
    try:     
        for simplex in hull.simplices:
            plt.plot(points[simplex, 0], points[simplex, 1], 'k-')
            plt.fill(points[hull.vertices,0], points[hull.vertices,1], 'red', alpha=0.05)
                       
    except:
        pass
    
#Once all of the individual hulls have been created, plot them together
plt.show()
